{"version":3,"sources":["webpack:///./src/components/courseware-breadcrumb.js","webpack:///./src/components/courseware-header.js","webpack:///./src/components/courseware-image.js","webpack:///./src/components/collapsible.js","webpack:///./src/scripts/validate.js","webpack:///./src/components/courseware-metadata.js","webpack:///./src/components/courseware-description.js","webpack:///./src/components/courseware-pages.js","webpack:///./src/pages/courseware.js"],"names":["CoursewareBreadcrumbs","paths","url","split","breadcrumbItems","map","path","index","arrows","length","className","styles","breadcrumbItem","key","shortid","href","aria-label","breadcrumbList","CoursewareHeader","title","visits","subheader","CoursewareImage","imageSrc","imageDescription","src","alt","Collapsible","children","classes","collapsible","useState","open","setOpen","titleHandleClick","useCallback","content","icon","onClick","validate","value","withBreakpoints","instructors","departmentNumber","masterCourseNumber","fromSemester","fromYear","courseLevel","currentBreakpoint","breakpoints","instructorsEl","instructor","generate","directoryTitle","firstName","lastName","metadataEl","instructorsHeader","sm","CoursewareDescription","description","dangerouslySetInnerHTML","__html","CoursewarePages","coursePagesEl","coursePages","coursePage","text","CoursewarePage","result","location","client","useContext","FaunaContext","siteMetadata","useSiteMetadata","setVisits","visitsLoading","setVisitsLoading","syncedLoading","setSyncedLoading","syncedCourseware","setSyncedCourseware","coursewareStore","Store","online","window","navigator","onLine","coursewareUid","search","URL","searchParams","get","useEffect","a","async","query","q","Map","Paginate","Match","Index","Lambda","Get","Var","initResult","coursewares","data","find","el","uid","Create","Collection","readResult","newVisits","Update","ref","getSyncedData","coursewareResult","useIndividualCoursewareQuery","loading","JSON","parse","allCoursewares","siteTitle","siteDescription","courseware","header","metadata","pages"],"mappings":"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","file":"component---src-pages-courseware-js-66dad1f0f31e2c85bfd7.js","sourcesContent":["import React from 'react';\nimport shortid from '../scripts/shortid';\nimport styles from './courseware-breadcrumb.module.scss';\n\nconst CoursewareBreadcrumbs = ({ url }) => {\n  const paths = url.split('/');\n\n  const breadcrumbItems = paths.map((path, index) => {\n    const arrows = index !== paths.length - 1 ? ' / ' : '';\n    if (path === 'courses') {\n      return (\n        <li\n          className={styles.breadcrumbItem}\n          key={shortid()}\n        >\n          <a href=\"/\">{path}</a>\n          {arrows}\n        </li>\n      );\n    }\n    return (\n      <li\n        className={styles.breadcrumbItem}\n        key={shortid()}\n      >\n        <span>{path}</span>\n        {arrows}\n      </li>\n    );\n  });\n  return (\n    <nav aria-label=\"breadcrumb\">\n      <ul className={styles.breadcrumbList}>\n        {breadcrumbItems}\n      </ul>\n    </nav>\n  );\n};\n\nexport default CoursewareBreadcrumbs;\n","import React from 'react';\nimport CoursewareBreadcrumb from './courseware-breadcrumb';\nimport styles from './courseware-header.module.scss';\n\nconst CoursewareHeader = ({\n  className,\n  url,\n  title,\n  visits,\n}) => (\n  <div className={className}>\n    <div className={styles.subheader}>\n      <h3 className={styles.title}>{title}</h3>\n      <h5 className={styles.visits}>\n        Visits:&nbsp;\n        {visits}\n      </h5>\n    </div>\n    <CoursewareBreadcrumb url={url} />\n  </div>\n);\n\nexport default CoursewareHeader;\n","import React from 'react';\nimport './courseware-card.scss';\n\nconst CoursewareImage = ({\n  className,\n  imageSrc,\n  imageDescription,\n}) => (\n  <div className={className}>\n    <img src={imageSrc} className=\"courseware-image\" alt=\"TBD\" title=\"TBD\" />\n    <p>\n      <small>{imageDescription}</small>\n    </p>\n  </div>\n);\n\nexport default CoursewareImage;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useState, useCallback } from 'react';\nimport { MdExpandLess, MdExpandMore } from 'react-icons/md';\nimport styles from './collapsible.module.scss';\n\nconst Collapsible = ({ className, title, children }) => {\n  const classes = `${className} ${styles.collapsible}`;\n  const [open, setOpen] = useState(0);\n  const titleHandleClick = useCallback(\n    () => setOpen(!open),\n  );\n  const content = open ? (\n    <>\n      {children}\n    </>\n  ) : null;\n  const icon = open ? (\n    <MdExpandLess />\n  ) : (\n    <MdExpandMore />\n  );\n\n  return (\n    <div className={classes} onClick={titleHandleClick}>\n      <div className={styles.title}>\n        <h4>{title}</h4>\n        <span className={styles.icon}>{icon}</span>\n      </div>\n      {content}\n    </div>\n  );\n};\n\nexport default Collapsible;\n","/*\n  TODO: we may want to use something more elaborate to check the results of our GraphQL queries\n  entirely. Something like the Joi validator, which is a large library that adds to our bundle size:\n  https://github.com/hapijs/joi\n*/\nconst validate = (key, value) => {\n  switch (key) {\n    case 'directoryTitle':\n      // eslint-disable-next-line no-unneeded-ternary\n      return value ? value : 'Professor';\n    case 'imageDescription':\n      return value ? value.imageDescription : 'None';\n    default:\n      return '';\n  }\n};\n\nexport default validate;\n","import React from 'react';\nimport { withBreakpoints } from 'react-breakpoints';\nimport Collapsible from './collapsible';\nimport shortid from '../scripts/shortid';\nimport validate from '../scripts/validate';\nimport styles from './courseware-metadata.module.scss';\n\nconst CoursewareMetadata = ({\n  className,\n  instructors,\n  departmentNumber,\n  masterCourseNumber,\n  fromSemester,\n  fromYear,\n  courseLevel,\n  currentBreakpoint,\n  breakpoints,\n}) => {\n  const instructorsEl = instructors.map(instructor => (\n    <p key={shortid.generate()}>\n      {`${validate('directoryTitle', instructor.directoryTitle)} ${instructor.firstName} ${instructor.lastName}`}\n    </p>\n  ));\n\n  const metadataEl = (\n    <>\n      <h4 className={styles.instructorsHeader}>Instructor(s)</h4>\n      {instructorsEl}\n      <h4>MIT Course Number</h4>\n      <p>{`${departmentNumber}.${masterCourseNumber}`}</p>\n      <h4>As Taught In</h4>\n      <p>{`${fromSemester} ${fromYear}`}</p>\n      <h4>Level</h4>\n      <p>{courseLevel}</p>\n    </>\n  );\n\n  const result = breakpoints[currentBreakpoint] < breakpoints.sm ? (\n    <Collapsible className={className} title=\"Course Metadata\">\n      {metadataEl}\n    </Collapsible>\n  ) : (\n    <div className={className}>\n      {metadataEl}\n    </div>\n  );\n\n  return result;\n};\n\nexport default withBreakpoints(CoursewareMetadata);\n","/* eslint-disable react/no-danger */\nimport React from 'react';\nimport Collapsible from './collapsible';\n\nconst CoursewareDescription = ({ className, description, url }) => (\n  <Collapsible className={className} title=\"Course Description\">\n    <div dangerouslySetInnerHTML={{ __html: `${description}` }} />\n    <a href={`https://ocw.mit.edu/${url}`}>Course Link</a>\n  </Collapsible>\n);\n\nexport default CoursewareDescription;\n","/* eslint-disable react/no-danger */\nimport React from 'react';\nimport Collapsible from './collapsible';\nimport shortid from '../scripts/shortid';\nimport styles from './courseware-pages.module.scss';\n\nconst CoursewarePages = ({ className, coursePages }) => {\n  const coursePagesEl = coursePages.map(coursePage => (\n    <Collapsible className={styles.coursePage} title={coursePage.title} key={shortid()}>\n      <div dangerouslySetInnerHTML={{ __html: `${coursePage.text ? coursePage.text : ''}` }} />\n    </Collapsible>\n  ));\n\n  return (\n    <div className={className}>\n      {coursePagesEl}\n    </div>\n  );\n};\n\nexport default CoursewarePages;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { FaCircleNotch } from 'react-icons/fa';\nimport { query as q } from 'faunadb';\nimport { Store, get } from 'idb-keyval';\nimport { FaunaContext } from '../faunadb/client';\nimport useSiteMetadata from '../hooks/use-site-metadata';\nimport useIndividualCoursewareQuery from '../hooks/use-individual-courseware-query';\nimport SEO from '../components/seo';\nimport Layout from '../components/layout';\nimport CoursewareHeader from '../components/courseware-header';\nimport CoursewareImage from '../components/courseware-image';\nimport CoursewareMetadata from '../components/courseware-metadata';\nimport CoursewareDescription from '../components/courseware-description';\nimport CoursewarePages from '../components/courseware-pages';\nimport validate from '../scripts/validate';\nimport styles from './courseware.module.scss';\nimport '../components/courseware-filters.scss';\n\nconst CoursewarePage = ({ location }) => {\n  const client = useContext(FaunaContext);\n  const { siteMetadata } = useSiteMetadata();\n  const [visits, setVisits] = useState(0);\n  const [visitsLoading, setVisitsLoading] = useState(true);\n  const [syncedLoading, setSyncedLoading] = useState(true);\n  const [syncedCourseware, setSyncedCourseware] = useState(null);\n  const coursewareStore = new Store('ocw-store', 'courseware');\n  const online = window.navigator.onLine;\n  // During build, location.search is an empty string\n  const hasParams = (location.search !== '');\n  const coursewareUid = hasParams ? (new URL(location.href)).searchParams.get('courseware_uid') : null;\n  let result;\n\n  useEffect(() => {\n    const getData = async () => {\n      setVisitsLoading(true);\n      if (coursewareUid) {\n        // Check if courseware already exists in FaunaDb\n        const initResult = await client.query(\n          q.Map(\n            q.Paginate(\n              q.Match(q.Index('all_coursewares')),\n            ),\n            q.Lambda('X', q.Get(q.Var('X'))),\n          ),\n        );\n        const coursewares = initResult.data;\n        // Courseware does not exist in FaunaDB, create one\n        // and set visits to 1\n        if (coursewares && !coursewares.find(el => el.data.uid === coursewareUid)) {\n          // Create\n          await client.query(\n            q.Create(\n              q.Collection('coursewares'), {\n                data: {\n                  uid: coursewareUid,\n                  visits: 1,\n                },\n              },\n            ),\n          );\n          setVisits(1);\n        // Courseware exists, increment visits by 1\n        } else {\n          const readResult = await client.query(\n            q.Get(\n              q.Match(q.Index('coursewares_by_uid'), coursewareUid),\n            ),\n          );\n          const newVisits = readResult.data.visits + 1;\n          // Update visits on FaunaDB\n          await client.query(\n            q.Update(readResult.ref, {\n              data: {\n                visits: newVisits,\n              },\n            }),\n          );\n          setVisits(newVisits);\n        }\n      }\n      setVisitsLoading(false);\n    };\n    if (online) {\n      getData();\n    }\n  }, [location]);\n\n  useEffect(() => {\n    const getSyncedData = async () => {\n      const data = await get(coursewareUid, coursewareStore);\n      setSyncedCourseware(data);\n      setSyncedLoading(false);\n    };\n    getSyncedData();\n  }, []);\n\n  if (coursewareUid) {\n    let coursewareResult;\n    let data;\n    if (online) {\n      coursewareResult = useIndividualCoursewareQuery(coursewareUid);\n      if (coursewareResult.loading || visitsLoading) {\n        return (\n          <div className=\"spinner-container\">\n            <FaCircleNotch className=\"spinner\" />\n          </div>\n        );\n      }\n      data = coursewareResult.data;\n    } else if (!syncedLoading) {\n      if (syncedCourseware) {\n        data = JSON.parse(syncedCourseware);\n      } else {\n        return (\n          <p>\n            This course has not been synced\n          </p>\n        );\n      }\n    } else {\n      return (\n        <div className=\"spinner-container\">\n          <FaCircleNotch className=\"spinner\" />\n        </div>\n      );\n    }\n    const { allCoursewares } = data;\n    if (allCoursewares.length === 0) {\n      return (<div className=\"spinner-container\">Not a valid course identificator</div>);\n    }\n    // Get the fields of interest from valid courseware\n    const {\n      title,\n      imageSrc,\n      imageDescription,\n      instructors,\n      departmentNumber,\n      masterCourseNumber,\n      fromSemester,\n      fromYear,\n      courseLevel,\n      description,\n      url,\n      coursePages,\n    } = allCoursewares[0];\n    result = (\n      <Layout>\n        <SEO\n          siteTitle={siteMetadata.title}\n          siteDescription={siteMetadata.description}\n        />\n        <div className={styles.courseware}>\n          <CoursewareHeader\n            className={styles.header}\n            url={url}\n            title={title}\n            visits={visits}\n          />\n          <CoursewareImage\n            imageSrc={imageSrc}\n            imageDescription={validate('imageDescription', imageDescription)}\n          />\n          <CoursewareMetadata\n            className={styles.metadata}\n            instructors={instructors}\n            departmentNumber={departmentNumber}\n            masterCourseNumber={masterCourseNumber}\n            fromSemester={fromSemester}\n            fromYear={fromYear}\n            courseLevel={courseLevel}\n          />\n          <CoursewareDescription\n            className={styles.description}\n            description={description}\n            url={url}\n          />\n          <CoursewarePages\n            className={styles.pages}\n            coursePages={coursePages}\n          />\n        </div>\n      </Layout>\n    );\n  } else {\n    // Error message for erroneous courseUid param\n    result = location.href\n      ? (<div className=\"spinner-container\">Not a valid course identificator</div>)\n      : null;\n  }\n\n  return result;\n};\n\nexport default CoursewarePage;\n"],"sourceRoot":""}