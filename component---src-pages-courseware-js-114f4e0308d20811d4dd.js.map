{"version":3,"sources":["webpack:///./src/hooks/use-individual-courseware-query.js","webpack:///./src/components/courseware-breadcrumb.js","webpack:///./src/components/courseware-header.js","webpack:///./src/components/courseware-image.js","webpack:///./src/components/collapsible.js","webpack:///./src/scripts/validate.js","webpack:///./src/components/courseware-metadata.js","webpack:///./src/components/courseware-description.js","webpack:///./src/components/courseware-pages.js","webpack:///./src/pages/courseware.js"],"names":["GET_COURSEWARE","gql","useIndividualCoursewareQuery","coursewareUid","useQuery","variables","CoursewareBreadcrumbs","paths","url","split","breadcrumbItems","map","path","index","arrows","length","className","styles","breadcrumbItem","key","shortid","href","aria-label","breadcrumbList","CoursewareHeader","title","CoursewareImage","imageSrc","imageDescription","src","alt","Collapsible","children","classes","collapsible","useState","open","setOpen","titleHandleClick","useCallback","content","icon","onClick","validate","value","withBreakpoints","instructors","departmentNumber","masterCourseNumber","fromSemester","fromYear","courseLevel","currentBreakpoint","breakpoints","instructorsEl","instructor","generate","directoryTitle","firstName","lastName","metadataEl","instructorsHeader","sm","CoursewareDescription","description","dangerouslySetInnerHTML","__html","CoursewarePages","coursePagesEl","coursePages","coursePage","text","CoursewarePage","result","location","siteMetadata","useSiteMetadata","search","URL","searchParams","get","allCoursewares","data","loading","siteTitle","siteDescription","courseware","header","metadata","pages"],"mappings":"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","file":"component---src-pages-courseware-js-114f4e0308d20811d4dd.js","sourcesContent":["import gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst GET_COURSEWARE = gql`\n  query($coursewareUid: ItemId) {\n    allCoursewares(\n      filter: {\n        id: {eq: $coursewareUid}\n      }\n    ) {\n      trackingTitle\n      title\n      masterCourseNumber\n      imageSrc\n      imageDescription\n      description\n      url\n      shortUrl\n      courseLevel\n      departmentNumber\n      instructors {\n        directoryTitle\n        firstName\n        lastName\n      }\n      tags {\n        name\n      }\n      toSemester\n      fromSemester\n      toYear\n      fromYear\n      sortAs\n      language\n      coursePages {\n        id\n        title\n        url\n        shortUrl\n        pageType\n        text\n      }\n    }\n  }\n`;\n\nconst useIndividualCoursewareQuery = coursewareUid => (\n  useQuery(GET_COURSEWARE, {\n    variables: {\n      coursewareUid,\n    },\n  })\n);\n\nexport default useIndividualCoursewareQuery;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport shortid from '../scripts/shortid';\nimport styles from './courseware-breadcrumb.module.scss';\n\nconst CoursewareBreadcrumbs = ({ url }) => {\n  const paths = url.split('/');\n\n  const breadcrumbItems = paths.map((path, index) => {\n    const arrows = index !== paths.length - 1 ? ' / ' : '';\n    if (path === 'courses') {\n      return (\n        <li\n          className={styles.breadcrumbItem}\n          key={shortid()}\n        >\n          <a href=\"/\">{path}</a>\n          {arrows}\n        </li>\n      );\n    }\n    return (\n      <li\n        className={styles.breadcrumbItem}\n        key={shortid()}\n      >\n        <span>{path}</span>\n        {arrows}\n      </li>\n    );\n  });\n  return (\n    <nav aria-label=\"breadcrumb\">\n      <ul className={styles.breadcrumbList}>\n        {breadcrumbItems}\n      </ul>\n    </nav>\n  );\n};\n\nexport default CoursewareBreadcrumbs;\n","import React from 'react';\nimport CoursewareBreadcrumb from './courseware-breadcrumb';\nimport styles from './courseware-header.module.scss';\n\nconst CoursewareHeader = ({\n  className,\n  url,\n  title,\n}) => (\n  <div className={className}>\n    <h3 className={styles.title}>{title}</h3>\n    <CoursewareBreadcrumb url={url} />\n  </div>\n);\n\nexport default CoursewareHeader;\n","import React from 'react';\nimport './courseware-card.scss';\n\nconst CoursewareImage = ({\n  className,\n  imageSrc,\n  imageDescription,\n}) => (\n  <div className={className}>\n    <img src={imageSrc} className=\"courseware-image\" alt=\"TBD\" title=\"TBD\" />\n    <p>\n      <small>{imageDescription}</small>\n    </p>\n  </div>\n);\n\nexport default CoursewareImage;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useState, useCallback } from 'react';\nimport { MdExpandLess, MdExpandMore } from 'react-icons/md';\nimport styles from './collapsible.module.scss';\n\nconst Collapsible = ({ className, title, children }) => {\n  const classes = `${className} ${styles.collapsible}`;\n  const [open, setOpen] = useState(0);\n  const titleHandleClick = useCallback(\n    () => setOpen(!open),\n  );\n  const content = open ? (\n    <>\n      {children}\n    </>\n  ) : null;\n  const icon = open ? (\n    <MdExpandLess />\n  ) : (\n    <MdExpandMore />\n  );\n\n  return (\n    <div className={classes} onClick={titleHandleClick}>\n      <div className={styles.title}>\n        <h4>{title}</h4>\n        <span className={styles.icon}>{icon}</span>\n      </div>\n      {content}\n    </div>\n  );\n};\n\nexport default Collapsible;\n","/* eslint-disable no-unneeded-ternary */\n/*\n  TODO: we may want to use something more elaborate to check the results of our GraphQL queries\n  entirely. Something like the Joi validator, which is a large library that adds to our bundle size:\n  https://github.com/hapijs/joi\n*/\nconst validate = (key, value) => {\n  switch (key) {\n    case 'directoryTitle':\n      // eslint-disable-next-line no-unneeded-ternary\n      return value ? value : 'Professor';\n    case 'imageDescription':\n      return value ? value.imageDescription : 'None';\n    default:\n      return '';\n  }\n};\n\nexport default validate;\n","import React from 'react';\nimport { withBreakpoints } from 'react-breakpoints';\nimport Collapsible from './collapsible';\nimport shortid from '../scripts/shortid';\nimport validate from '../scripts/validate';\nimport styles from './courseware-metadata.module.scss';\n\nconst CoursewareMetadata = ({\n  className,\n  instructors,\n  departmentNumber,\n  masterCourseNumber,\n  fromSemester,\n  fromYear,\n  courseLevel,\n  currentBreakpoint,\n  breakpoints,\n}) => {\n  const instructorsEl = instructors.map(instructor => (\n    <p key={shortid.generate()}>\n      {`${validate('directoryTitle', instructor.directoryTitle)} ${instructor.firstName} ${instructor.lastName}`}\n    </p>\n  ));\n\n  const metadataEl = (\n    <>\n      <h4 className={styles.instructorsHeader}>Instructor(s)</h4>\n      {instructorsEl}\n      <h4>MIT Course Number</h4>\n      <p>{`${departmentNumber}.${masterCourseNumber}`}</p>\n      <h4>As Taught In</h4>\n      <p>{`${fromSemester} ${fromYear}`}</p>\n      <h4>Level</h4>\n      <p>{courseLevel}</p>\n    </>\n  );\n\n  const result = breakpoints[currentBreakpoint] < breakpoints.sm ? (\n    <Collapsible className={className} title=\"Course Metadata\">\n      {metadataEl}\n    </Collapsible>\n  ) : (\n    <div className={className}>\n      {metadataEl}\n    </div>\n  );\n\n  return result;\n};\n\nexport default withBreakpoints(CoursewareMetadata);\n","/* eslint-disable react/no-danger */\nimport React from 'react';\nimport Collapsible from './collapsible';\n\nconst CoursewareDescription = ({ className, description, url }) => (\n  <Collapsible className={className} title=\"Course Description\">\n    <div dangerouslySetInnerHTML={{ __html: `${description}` }} />\n    <a href={`https://ocw.mit.edu/${url}`}>Course Link</a>\n  </Collapsible>\n);\n\nexport default CoursewareDescription;\n","/* eslint-disable react/no-danger */\nimport React from 'react';\nimport Collapsible from './collapsible';\nimport shortid from '../scripts/shortid';\nimport styles from './courseware-pages.module.scss';\n\nconst CoursewarePages = ({ className, coursePages }) => {\n  const coursePagesEl = coursePages.map(coursePage => (\n    <Collapsible className={styles.coursePage} title={coursePage.title} key={shortid()}>\n      <div dangerouslySetInnerHTML={{ __html: `${coursePage.text ? coursePage.text : ''}` }} />\n    </Collapsible>\n  ));\n\n  return (\n    <div className={className}>\n      {coursePagesEl}\n    </div>\n  );\n};\n\nexport default CoursewarePages;\n","import React from 'react';\nimport { FaCircleNotch } from 'react-icons/fa';\nimport useSiteMetadata from '../hooks/use-site-metadata';\nimport useIndividualCoursewareQuery from '../hooks/use-individual-courseware-query';\nimport SEO from '../components/seo';\nimport Layout from '../components/layout';\nimport CoursewareHeader from '../components/courseware-header';\nimport CoursewareImage from '../components/courseware-image';\nimport CoursewareMetadata from '../components/courseware-metadata';\nimport CoursewareDescription from '../components/courseware-description';\nimport CoursewarePages from '../components/courseware-pages';\nimport validate from '../scripts/validate';\nimport styles from './courseware.module.scss';\nimport '../components/courseware-filters.scss';\n\nconst CoursewarePage = ({ location }) => {\n  const { siteMetadata } = useSiteMetadata();\n  // During build, location.search is an empty string\n  const hasParams = (location.search !== '');\n  const coursewareUid = hasParams ? (new URL(location.href)).searchParams.get('courseware_uid') : null;\n  let result;\n  if (coursewareUid) {\n    const { data: { allCoursewares }, loading } = useIndividualCoursewareQuery(coursewareUid);\n    if (loading) {\n      return (\n        <div className=\"spinner-container\">\n          <FaCircleNotch className=\"spinner\" />\n        </div>\n      );\n    }\n    if (allCoursewares.length === 0) {\n      return (<div className=\"spinner-container\">Not a valid course identificator</div>);\n    }\n    // Get the fields of interest from valid courseware\n    const {\n      title,\n      imageSrc,\n      imageDescription,\n      instructors,\n      departmentNumber,\n      masterCourseNumber,\n      fromSemester,\n      fromYear,\n      courseLevel,\n      description,\n      url,\n      coursePages,\n    } = allCoursewares[0];\n    result = (\n      <Layout>\n        <SEO\n          siteTitle={siteMetadata.title}\n          siteDescription={siteMetadata.description}\n        />\n        <div className={styles.courseware}>\n          <CoursewareHeader\n            className={styles.header}\n            url={url}\n            title={title}\n          />\n          <CoursewareImage\n            imageSrc={imageSrc}\n            imageDescription={validate('imageDescription', imageDescription)}\n          />\n          <CoursewareMetadata\n            className={styles.metadata}\n            instructors={instructors}\n            departmentNumber={departmentNumber}\n            masterCourseNumber={masterCourseNumber}\n            fromSemester={fromSemester}\n            fromYear={fromYear}\n            courseLevel={courseLevel}\n          />\n          <CoursewareDescription\n            className={styles.description}\n            description={description}\n            url={url}\n          />\n          <CoursewarePages\n            className={styles.pages}\n            coursePages={coursePages}\n          />\n        </div>\n      </Layout>\n    );\n  } else {\n    // Error message for erroneous courseUid param\n    result = location.href ? (<p>Not a valid course identificator</p>) : null;\n  }\n\n  return result;\n};\n\nexport default CoursewarePage;\n"],"sourceRoot":""}