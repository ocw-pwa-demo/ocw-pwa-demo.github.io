{"version":3,"sources":["webpack:///./src/hooks/use-topic-query.js","webpack:///./src/components/courseware-topic-filter.js","webpack:///./src/hooks/use-feature-query.js","webpack:///./src/components/courseware-feature-filter.js","webpack:///./src/hooks/use-level-query.js","webpack:///./src/components/courseware-level-filter.js","webpack:///./src/hooks/use-courseware-query.js","webpack:///./src/hooks/use-course-collection-query.js","webpack:///./src/hooks/use-course-feature-query.js","webpack:///./src/components/courseware-loading.js","webpack:///./src/components/courseware-list.js","webpack:///./src/pages/discovery.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/scripts/shortid.js","webpack:///./src/hooks/use-site-metadata.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./src/components/courseware-card.js"],"names":["ALL_TOPICS","gql","_templateObject","useTopicQuery","useQuery","CoursewareTopicFilter","_Store$useContainer","Store","useContainer","courseTopic","changeCourseTopic","_useTopicQuery","allCourseCollections","data","loading","react_default","a","createElement","className","index_esm","topics","map","item","ocwFeature","topicOptions","filter","index","indexOf","topic","dist","value","key","shortid","dist_default","enhanced","outlined","label","onEnhancedChange","ALL_FEATURES","use_feature_query_templateObject","useFeatureQuery","CoursewareFeatureFilter","courseFeature","changeCourseFeature","_useFeatureQuery","allCourseFeatures","allFeatures","featureOptions","feature","ALL_LEVELS","use_level_query_templateObject","useLevelQuery","CoursewareLevelFilter","courseLevel","changeCourseLevel","_useLevelQuery","allCoursewares","levels","levelOptions","level","GET_COURSEWARES","use_courseware_query_templateObject","GET_COURSEWARES_ALL_TOPICS","_templateObject2","GET_COURSEWARES_ANY_FEATURE","_templateObject3","GET_COURSEWARES_ALL_TOPICS_ANY_FEATURE","_templateObject4","useCoursewareQuery","courseCollectionIds","courseFeatureIds","COURSEWARE_QUERY","courseLevelRegex","variables","GET_COURSE_COLLECTIONS","use_course_collection_query_templateObject","useCourseCollectionQuery","courseTopicRegex","GET_COURSE_FEATURES","use_course_feature_query_templateObject","useCourseFeatureQuery","courseFeatureRegex","CoursewareLoading","Fragment","styles","coursewareNumber","coursewareListLoading","spinner","CoursewareList","cardType","changeCardType","_useCourseCollectionQ","collectionLoading","courseCollection","id","_useCourseFeatureQuer","featureLoading","_useCoursewareQuery","coursewareLoading","courseware_loading","coursewareListClasses","length","toString","coursewareCards","courseware","courseware_card","coursewareList","coursewareListCondensed","coursewareListText","cardTypes","react_icon_button_dist_default","data-card-type","onClick","md_index_esm","DiscoveryPage","siteMetadata","useSiteMetadata","layout","seo","siteTitle","title","siteDescription","description","courseware_topic_filter","courseware_feature_filter","courseware_level_filter","courseware_list","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","d","__webpack_exports__","React","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","_public_static_d_364061999_json__WEBPACK_IMPORTED_MODULE_0__","site","react_helmet__WEBPACK_IMPORTED_MODULE_1__","SEO","_ref","lang","name","content","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape","Header","changeTheme","useCallback","root","document","documentElement","hasAttribute","removeAttribute","setAttribute","navigateToIndex","navigate","header","button","Footer","footer","href","row","column","src","alt","breakpoints","xs","sm","md","lg","xl","Layout","children","lib_default","app","main","_material_react_card__WEBPACK_IMPORTED_MODULE_1__","_material_react_card__WEBPACK_IMPORTED_MODULE_1___default","_material_react_button__WEBPACK_IMPORTED_MODULE_2__","_material_react_button__WEBPACK_IMPORTED_MODULE_2___default","react_icons_md__WEBPACK_IMPORTED_MODULE_3__","react_text_truncate__WEBPACK_IMPORTED_MODULE_4__","react_text_truncate__WEBPACK_IMPORTED_MODULE_4___default","gatsby__WEBPACK_IMPORTED_MODULE_5__","striptags__WEBPACK_IMPORTED_MODULE_6__","striptags__WEBPACK_IMPORTED_MODULE_6___default","_courseware_card_module_scss__WEBPACK_IMPORTED_MODULE_7__","_courseware_card_module_scss__WEBPACK_IMPORTED_MODULE_7___default","CoursewareCard","_useState","useState","favorite","setFavorite","favoriteIcon","navigateToCourseware","favoriteHandleClick","trackingTitle","imageSrc","masterCourseNumber","departmentNumber","card","containerClassName","line","element","truncateText","text","subtitle","wide","imageUrl","subsubtitle","striptags","actions","dense","icon","cardCondensed","textContainer","thumbnail","actionsCondensed","textCard"],"mappings":"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","file":"component---src-pages-discovery-js-8eaf903b49629c368c1b.js","sourcesContent":["import gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst ALL_TOPICS = gql`\n  {\n    allCourseCollections(first: 100) {\n      ocwFeature\n    }\n  }\n`;\n\nconst useTopicQuery = () => useQuery(ALL_TOPICS);\n\nexport default useTopicQuery;\n","import React from 'react';\nimport Select, { Option } from '@material/react-select';\nimport { FaCircleNotch } from 'react-icons/fa';\nimport Store from '../store/store';\nimport useTopicQuery from '../hooks/use-topic-query';\nimport './courseware-filters.scss';\nimport shortid from '../scripts/shortid';\n\nconst CoursewareTopicFilter = () => {\n  const {\n    courseTopic,\n    changeCourseTopic,\n  } = Store.useContainer();\n  const { data: { allCourseCollections }, loading } = useTopicQuery();\n  if (loading) {\n    return (\n      <div className=\"filter\">\n        <FaCircleNotch className=\"spinner\" />\n      </div>\n    );\n  }\n  let topics = allCourseCollections.map(item => item.ocwFeature);\n  topics = topics.filter((item, index) => topics.indexOf(item) === index);\n  const topicOptions = topics.map(topic => (\n    <Option value={topic} key={shortid()}>{topic}</Option>\n  ));\n  return (\n    <div className=\"filter\">\n      <Select\n        enhanced\n        outlined\n        label=\"Topic\"\n        value={courseTopic}\n        onEnhancedChange={changeCourseTopic}\n        className=\"filter\"\n      >\n        <Option value=\"All\" key={shortid()}>All</Option>\n        {topicOptions}\n      </Select>\n    </div>\n  );\n};\n\nexport default CoursewareTopicFilter;\n","import gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst ALL_FEATURES = gql`\n  {\n    allCourseFeatures(first: 100) {\n      ocwFeature\n    }\n  }\n`;\n\nconst useFeatureQuery = () => useQuery(ALL_FEATURES);\n\nexport default useFeatureQuery;\n","import React from 'react';\nimport Select, { Option } from '@material/react-select';\nimport { FaCircleNotch } from 'react-icons/fa';\nimport Store from '../store/store';\nimport useFeatureQuery from '../hooks/use-feature-query';\nimport './courseware-filters.scss';\nimport shortid from '../scripts/shortid';\n\nconst CoursewareFeatureFilter = () => {\n  const {\n    courseFeature,\n    changeCourseFeature,\n  } = Store.useContainer();\n  const { data: { allCourseFeatures }, loading } = useFeatureQuery();\n  if (loading) {\n    return (\n      <div className=\"filter\">\n        <FaCircleNotch className=\"spinner\" />\n      </div>\n    );\n  }\n  const allFeatures = allCourseFeatures.map(item => item.ocwFeature);\n  const features = allFeatures.filter((item, index) => allFeatures.indexOf(item) === index);\n  const featureOptions = features.map(feature => (\n    <Option value={feature} key={shortid()}>{feature}</Option>\n  ));\n  return (\n    <div className=\"filter\">\n      <Select\n        enhanced\n        outlined\n        label=\"Feature\"\n        value={courseFeature}\n        onEnhancedChange={changeCourseFeature}\n        className=\"filter\"\n      >\n        <Option value=\"Any\" key={shortid()}>Any</Option>\n        {featureOptions}\n      </Select>\n    </div>\n  );\n};\n\nexport default CoursewareFeatureFilter;\n","import gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst ALL_LEVELS = gql`\n  {\n    allCoursewares(first: 100) {\n      courseLevel\n    }\n  }\n`;\n\nconst useLevelQuery = () => useQuery(ALL_LEVELS);\n\nexport default useLevelQuery;\n","import React from 'react';\nimport Select, { Option } from '@material/react-select';\nimport { FaCircleNotch } from 'react-icons/fa';\nimport Store from '../store/store';\nimport useLevelQuery from '../hooks/use-level-query';\nimport './courseware-filters.scss';\nimport shortid from '../scripts/shortid';\n\nconst CoursewareLevelFilter = () => {\n  const {\n    courseLevel,\n    changeCourseLevel,\n  } = Store.useContainer();\n  const { data: { allCoursewares }, loading } = useLevelQuery();\n  if (loading) {\n    return (\n      <div className=\"filter\">\n        <FaCircleNotch className=\"spinner\" />\n      </div>\n    );\n  }\n  let levels = allCoursewares.map(item => item.courseLevel);\n  levels = levels.filter((item, index) => levels.indexOf(item) === index);\n  const levelOptions = levels.map(level => (\n    <Option value={level} key={shortid()}>{level}</Option>\n  ));\n  return (\n    <div className=\"filter\">\n      <Select\n        enhanced\n        outlined\n        label=\"Level\"\n        value={courseLevel}\n        onEnhancedChange={changeCourseLevel}\n        className=\"filter\"\n      >\n        <Option value=\"All\" key={shortid()}>All</Option>\n        {levelOptions}\n      </Select>\n    </div>\n  );\n};\n\nexport default CoursewareLevelFilter;\n","import gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst GET_COURSEWARES = gql`\n  query($courseLevelRegex: String!, $courseCollectionIds: [ItemId], $courseFeatureIds: [ItemId]) {\n    allCoursewares(\n      first: 100,\n      orderBy: [title_ASC],\n      filter: {\n        courseLevel: {matches: {pattern: $courseLevelRegex}},\n        courseCollections: {anyIn: $courseCollectionIds},\n        courseFeatures: {anyIn: $courseFeatureIds}\n      }\n    ) {\n      id\n      title\n      courseLevel\n      trackingTitle\n      imageSrc\n      description\n      departmentNumber\n      masterCourseNumber\n    }\n  }\n`;\n\nconst GET_COURSEWARES_ALL_TOPICS = gql`\n  query($courseLevelRegex: String!, $courseFeatureIds: [ItemId]) {\n    allCoursewares(\n      first: 100,\n      orderBy: [title_ASC],\n      filter: {\n        courseLevel: {matches: {pattern: $courseLevelRegex}},\n        courseFeatures: {anyIn: $courseFeatureIds}\n      }\n    ) {\n      id\n      title\n      courseLevel\n      trackingTitle\n      imageSrc\n      description\n      departmentNumber\n      masterCourseNumber\n    }\n  }\n`;\n\nconst GET_COURSEWARES_ANY_FEATURE = gql`\n  query($courseLevelRegex: String!, $courseCollectionIds: [ItemId]) {\n    allCoursewares(\n      first: 100,\n      orderBy: [title_ASC],\n      filter: {\n        courseLevel: {matches: {pattern: $courseLevelRegex}},\n        courseCollections: {anyIn: $courseCollectionIds}\n      }\n    ) {\n      id\n      title\n      courseLevel\n      trackingTitle\n      imageSrc\n      description\n      departmentNumber\n      masterCourseNumber\n    }\n  }\n`;\n\nconst GET_COURSEWARES_ALL_TOPICS_ANY_FEATURE = gql`\n  query($courseLevelRegex: String!) {\n    allCoursewares(\n      first: 100,\n      orderBy: [title_ASC],\n      filter: {\n        courseLevel: {matches: {pattern: $courseLevelRegex}}\n      }\n    ) {\n      id\n      title\n      courseLevel\n      trackingTitle\n      imageSrc\n      description\n      departmentNumber\n      masterCourseNumber\n    }\n  }\n`;\n\nconst useCoursewareQuery = (\n  courseTopic, courseFeature, courseLevel, courseCollectionIds, courseFeatureIds,\n) => {\n  // TODO: Simplify code by using regular expressions for course feature and course topic\n  // once pagination is implemented. The max amount of records returned by DatoCMS is 100.\n  // There are more than 100 records for course feature and course topic.\n  let COURSEWARE_QUERY;\n  if (courseTopic === 'All' && courseFeature !== 'Any') {\n    COURSEWARE_QUERY = GET_COURSEWARES_ALL_TOPICS;\n  } else if (courseFeature === 'Any' && courseTopic !== 'All') {\n    COURSEWARE_QUERY = GET_COURSEWARES_ANY_FEATURE;\n  } else if (courseTopic === 'All' && courseFeature === 'Any') {\n    COURSEWARE_QUERY = GET_COURSEWARES_ALL_TOPICS_ANY_FEATURE;\n  } else {\n    COURSEWARE_QUERY = GET_COURSEWARES;\n  }\n  // End TODO\n  const courseLevelRegex = courseLevel === 'All' ? '.*' : `^${courseLevel}$`;\n  return useQuery(COURSEWARE_QUERY, {\n    variables: {\n      courseLevelRegex,\n      courseCollectionIds,\n      courseFeatureIds,\n    },\n  });\n};\n\nexport default useCoursewareQuery;\n","import gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst GET_COURSE_COLLECTIONS = gql`\n  query($courseTopicRegex: String!) {\n    allCourseCollections(\n      first: 100,\n      filter: {\n        ocwFeature: {matches: {pattern: $courseTopicRegex}}\n      }\n    ) {\n      id\n    }\n  }\n`;\n\nconst useCourseCollectionQuery = (courseTopic) => {\n  const courseTopicRegex = courseTopic === 'All' ? '$^' : `^${courseTopic}$`;\n  return useQuery(GET_COURSE_COLLECTIONS, {\n    variables: {\n      courseTopicRegex,\n    },\n  });\n};\n\nexport default useCourseCollectionQuery;\n","import gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst GET_COURSE_FEATURES = gql`\n  query($courseFeatureRegex: String!) {\n    allCourseFeatures(\n      first: 100,\n      filter: {\n        ocwFeature: {matches: {pattern: $courseFeatureRegex}}\n      }\n    ) {\n      id\n    }\n  }\n`;\n\nconst useCourseFeatureQuery = (courseFeature) => {\n  const courseFeatureRegex = courseFeature === 'Any' ? '$^' : `^${courseFeature}$`;\n  return useQuery(GET_COURSE_FEATURES, {\n    variables: {\n      courseFeatureRegex,\n    },\n  });\n};\n\nexport default useCourseFeatureQuery;\n","/* eslint-disable no-shadow */\nimport React from 'react';\nimport { FaCircleNotch } from 'react-icons/fa';\nimport styles from './courseware-list.module.scss';\n\nconst CoursewareLoading = () => (\n  <>\n    <div className={styles.coursewareNumber}>\n      <span>Courses</span>\n    </div>\n    <div className={styles.coursewareListLoading}>\n      <FaCircleNotch className={styles.spinner} />\n    </div>\n  </>\n);\n\nexport default CoursewareLoading;\n","/* eslint-disable no-shadow */\nimport React from 'react';\nimport IconButton from '@material/react-icon-button';\nimport { MdCropPortrait, MdApps, MdDehaze } from 'react-icons/md';\nimport Store from '../store/store';\nimport useCoursewareQuery from '../hooks/use-courseware-query';\nimport useCourseCollectionQuery from '../hooks/use-course-collection-query';\nimport useCourseFeatureQuery from '../hooks/use-course-feature-query';\nimport CoursewareLoading from './courseware-loading';\nimport CoursewareCard from './courseware-card';\nimport shortid from '../scripts/shortid';\nimport styles from './courseware-list.module.scss';\n\nconst CoursewareList = () => {\n  const {\n    courseTopic,\n    courseFeature,\n    courseLevel,\n    cardType,\n    changeCardType,\n  } = Store.useContainer();\n  const { data: { allCourseCollections }, loading: collectionLoading } = useCourseCollectionQuery(\n    courseTopic,\n  );\n  const courseCollectionIds = allCourseCollections\n    ? allCourseCollections.map(courseCollection => courseCollection.id)\n    : [];\n  const { data: { allCourseFeatures }, loading: featureLoading } = useCourseFeatureQuery(\n    courseFeature,\n  );\n  const courseFeatureIds = allCourseFeatures\n    ? allCourseFeatures.map(courseFeature => courseFeature.id)\n    : [];\n  const { data: { allCoursewares }, loading: coursewareLoading } = useCoursewareQuery(\n    courseTopic, courseFeature, courseLevel, courseCollectionIds, courseFeatureIds,\n  );\n  if (collectionLoading || featureLoading || coursewareLoading) {\n    return <CoursewareLoading />;\n  }\n\n  const coursewareNumber = allCoursewares.length.toString();\n  const coursewareCards = allCoursewares.map(courseware => (\n    <CoursewareCard courseware={courseware} cardType={cardType} key={shortid()} />\n  ));\n  let coursewareListClasses;\n  switch (cardType) {\n    case 'condensed':\n      coursewareListClasses = `${styles.coursewareList} ${styles.coursewareListCondensed}`;\n      break;\n    case 'text':\n      coursewareListClasses = `${styles.coursewareList} ${styles.coursewareListText}`;\n      break;\n    // Regular cards\n    default:\n      coursewareListClasses = `${styles.coursewareList}`;\n  }\n\n  return (\n    <>\n      <div className={styles.coursewareNumber}>\n        <span>{`Courses (${coursewareNumber})`}</span>\n        <div className={styles.cardTypes}>\n          <IconButton\n            data-card-type=\"regular\"\n            onClick={changeCardType}\n          >\n            <MdCropPortrait />\n          </IconButton>\n          <IconButton\n            data-card-type=\"condensed\"\n            onClick={changeCardType}\n          >\n            <MdApps />\n          </IconButton>\n          <IconButton\n            data-card-type=\"text\"\n            onClick={changeCardType}\n          >\n            <MdDehaze />\n          </IconButton>\n        </div>\n      </div>\n      <div className={coursewareListClasses}>\n        {coursewareCards}\n      </div>\n    </>\n  );\n};\n\nexport default CoursewareList;\n","import React from 'react';\nimport useSiteMetadata from '../hooks/use-site-metadata';\nimport SEO from '../components/seo';\nimport Layout from '../components/layout';\nimport CoursewareTopicFilter from '../components/courseware-topic-filter';\nimport CoursewareFeatureFilter from '../components/courseware-feature-filter';\nimport CoursewareLevelFilter from '../components/courseware-level-filter';\nimport CoursewareList from '../components/courseware-list';\nimport '../components/courseware-filters.scss';\n\nconst DiscoveryPage = () => {\n  const { siteMetadata } = useSiteMetadata();\n\n  return (\n    <Layout>\n      <SEO\n        siteTitle={siteMetadata.title}\n        siteDescription={siteMetadata.description}\n      />\n      <div className=\"filters-container\">\n        <h3 className=\"filters-title\">Filter course by</h3>\n        <div className=\"filters\">\n          <CoursewareTopicFilter />\n          <CoursewareFeatureFilter />\n          <CoursewareLevelFilter />\n        </div>\n      </div>\n      <CoursewareList />\n    </Layout>\n  );\n};\n\nexport default DiscoveryPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","const shortid = require('shortid');\n\nexport default shortid;\n","import { useStaticQuery, graphql } from 'gatsby';\n\nconst useSiteMetadata = () => {\n  const METADATA_QUERY = graphql`\n    {\n      site {\n        siteMetadata {\n          title\n          description\n          author\n        }\n      }\n    }\n  `;\n  const { site } = useStaticQuery(METADATA_QUERY);\n\n  return site;\n};\n\nexport default useSiteMetadata;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\n\nconst SEO = ({ siteTitle, siteDescription }) => (\n  <Helmet>\n    <html lang=\"en-US\" />\n    <title>{siteTitle}</title>\n    <meta name=\"description\" content={siteDescription} />\n  </Helmet>\n);\n\nexport default SEO;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { useCallback } from 'react';\nimport { navigate } from 'gatsby';\nimport Button from '@material/react-button';\nimport styles from './header.module.scss';\n\nconst Header = () => {\n  const changeTheme = useCallback(\n    () => {\n      // eslint-disable-next-line no-undef\n      const root = document.documentElement;\n      if (root.hasAttribute('theme')) {\n        root.removeAttribute('theme');\n      } else {\n        root.setAttribute('theme', 'a11y');\n      }\n    },\n  );\n  const navigateToIndex = useCallback(\n    () => navigate(''),\n  );\n\n  return (\n    <header className={styles.header}>\n      <Button className={styles.button} onClick={navigateToIndex}>\n        OpenCourseWare\n        <br />\n        <small>Next Gen Experiments</small>\n      </Button>\n      <Button className={styles.button} onClick={changeTheme}>Theme</Button>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport styles from './footer.module.scss';\n\nconst Footer = () => (\n  <footer className={styles.footer}>\n    <h5>About MIT OpenCourseWare</h5>\n    <p>\n      MIT OpenCourseWare makes the materials used in the teaching\n      of almost all of MIT&apos;s subjects available on the Web, free\n      of charge. With more than 2,400 courses available, OCW is\n      delivering on the promise of open sharing of knowledge.\n    </p>\n    <p>\n      <a href=\"http://ocw.mit.edu/about/\">Learn More</a>\n    </p>\n    <div className={styles.row}>\n      <div className={styles.column}>\n        <img\n          src=\"https://ocw.mit.edu/images/logo_mit.png\"\n          alt=\"MIT Logo\"\n        />\n      </div>\n      <div className={styles.column}>\n        <img\n          src=\"https://ocw.mit.edu/images/logo_odl.png\"\n          alt=\"MIT Office of Digital Learning Logo\"\n        />\n      </div>\n      <div className={styles.column}>\n        <img\n          src=\"https://ocw.mit.edu/images/logo_oec.png\"\n          alt=\"Open Education Consortium Logo\"\n        />\n      </div>\n      <div className={styles.column}>\n        <img\n          src=\"https://ocw.mit.edu/images/cc_by-nc-sa.png\"\n          alt=\"Creative Commons with Attribution No Commercial\"\n        />\n      </div>\n    </div>\n    <p>© 2001–2019</p>\n    <p>Massachusetts Institute of Technology</p>\n    <p>\n      Your use of the MIT OpenCourseWare site and materials is\n      subject to our\n      {' '}\n      <a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\">Creative Commons</a>\n      {' '}\n      License and other\n      {' '}\n      <a href=\"https://ocw.mit.edu/terms/\">terms of use</a>\n      {'.'}\n    </p>\n  </footer>\n);\n\nexport default Footer;\n","import React from 'react';\nimport ReactBreakpoints from 'react-breakpoints';\nimport 'normalize.css';\nimport 'typeface-roboto';\nimport Header from './header';\nimport Footer from './footer';\nimport styles from './layout.module.scss';\n\nconst breakpoints = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n};\n\nconst Layout = ({ children }) => (\n  <ReactBreakpoints breakpoints={breakpoints}>\n    <div className={styles.app}>\n      <Header />\n      <main className={styles.main}>{children}</main>\n      <Footer />\n    </div>\n  </ReactBreakpoints>\n);\n\nexport default Layout;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useState, useCallback } from 'react';\nimport Card, {\n  CardMedia,\n  CardActions,\n  CardActionButtons,\n  CardActionIcons,\n} from '@material/react-card';\nimport Button from '@material/react-button';\nimport { MdFavorite, MdFavoriteBorder, MdShare } from 'react-icons/md';\nimport TextTruncate from 'react-text-truncate';\nimport { navigate } from 'gatsby';\nimport striptags from 'striptags';\nimport styles from './courseware-card.module.scss';\n\n// TODO: Replace departmentNumber by department once this field is present in DatoCMS\nconst CoursewareCard = ({ courseware, cardType }) => {\n  const [favorite, setFavorite] = useState(0);\n  const favoriteIcon = favorite ? (\n    <MdFavorite />\n  ) : (\n    <MdFavoriteBorder />\n  );\n  const navigateToCourseware = useCallback(\n    () => {\n      navigate(`courseware/?courseware_uid=${courseware.id}`);\n    },\n  );\n  const favoriteHandleClick = useCallback(\n    () => setFavorite(!favorite),\n  );\n  const {\n    title,\n    courseLevel,\n    trackingTitle,\n    imageSrc,\n    description,\n    masterCourseNumber,\n    departmentNumber,\n  } = courseware;\n\n  switch (cardType) {\n    // ##### Regular Card #####\n    case 'regular':\n      return (\n        <Card className={styles.card}>\n          <TextTruncate\n            containerClassName={styles.title}\n            line={1}\n            element=\"span\"\n            truncateText=\"…\"\n            text={title}\n          />\n          <span className={styles.subtitle}>{`${departmentNumber}.${masterCourseNumber}, ${courseLevel} Level`}</span>\n          <CardMedia\n              title={trackingTitle}\n              wide\n              imageUrl={imageSrc}\n          />\n          <TextTruncate\n            containerClassName={styles.subsubtitle}\n            line={1}\n            element=\"span\"\n            truncateText=\"…\"\n            text={`Department: ${departmentNumber}`}\n          />\n          <TextTruncate\n            containerClassName={styles.description}\n            line={2}\n            element=\"span\"\n            truncateText=\"…\"\n            text={striptags(description)}\n          />\n          <CardActions className={styles.actions}>\n            <CardActionButtons>\n              <Button\n                className={styles.button}\n                dense\n                onClick={navigateToCourseware}\n              >\n                Go to Course\n              </Button>\n            </CardActionButtons>\n            <CardActionIcons>\n              <span\n                className={styles.icon}\n                onClick={favoriteHandleClick}\n              >\n                {favoriteIcon}\n              </span>\n              <span className={styles.icon}><MdShare /></span>\n            </CardActionIcons>\n          </CardActions>\n        </Card>\n      );\n    // ##### Condensed Card #####\n    case 'condensed':\n      return (\n        <Card className={`${styles.card} ${styles.cardCondensed}`}>\n          <div className={styles.header}>\n            <div className={styles.textContainer}>\n              <div>\n                <TextTruncate\n                  containerClassName={styles.title}\n                  line={1}\n                  element=\"span\"\n                  truncateText=\"…\"\n                  text={title}\n                />\n              </div>\n              <div className={styles.subtitle}>{`${courseLevel} Level`}</div>\n            </div>\n            <img src={imageSrc} alt={trackingTitle} className={styles.thumbnail} />\n          </div>\n          <CardActions className={`${styles.actions} ${styles.actionsCondensed}`}>\n            <CardActionButtons>\n              <Button\n                className={styles.button}\n                dense\n                onClick={navigateToCourseware}\n              >\n                Go to Course\n              </Button>\n            </CardActionButtons>\n            <CardActionIcons>\n              <span\n                className={styles.icon}\n                onClick={favoriteHandleClick}\n              >\n                {favoriteIcon}\n              </span>\n              <span className={styles.icon}><MdShare /></span>\n            </CardActionIcons>\n          </CardActions>\n        </Card>\n      );\n    // ##### Text Card #####\n    case 'text':\n      return (\n        <div className={styles.textCard}>\n          <p>\n            <a\n              href=\"#\"\n              className={styles.title}\n              onClick={navigateToCourseware}\n            >\n              {title}\n            </a>\n          </p>\n          <p className={styles.subtitle}>\n            {`${departmentNumber}.${masterCourseNumber}, ${courseLevel} Level`}\n          </p>\n          <TextTruncate\n            containerClassName={styles.description}\n            line={1}\n            element=\"span\"\n            truncateText=\"…\"\n            text={striptags(description)}\n          />\n        </div>\n      );\n    default:\n      return null;\n  }\n};\n\nexport default CoursewareCard;\n"],"sourceRoot":""}